{"version":3,"sources":["actions/types.js","actions/index.js","components/TodoInput.js","components/TodoList.js","reducers/todos.js","reducers/index.js","index.js","Root.js","components/App.js"],"names":["ADD_TODO","REMOVE_TODO","TOGGLE_TODO","addTodo","todo","type","payload","removeTodo","id","toggleTodo","bool","TodoInput","state","props","setState","handleChange","e","target","value","handleKeyDown","key","switchMode","className","placeholder","this","onChange","onKeyDown","alt","onClick","Component","connect","actions","TodoList","display","todos","todoList","filter","completed","length","mode","map","index","name","style","textDecoration","content","undefined","switchDisplayMode","renderComments","renderNoData","initState","currentId","todoReducer","action","newTodo","Object","assign","combineReducers","ReactDOM","render","children","store","createStore","Reducers","applyMiddleware","reduxPromise","rel","href","document","querySelector"],"mappings":"6ZAAaA,EAAW,WACXC,EAAc,cACdC,EAAc,cCApB,SAASC,EAASC,GACvB,MAAO,CACLC,KAAML,EACNM,QAASF,GAIN,SAASG,EAAYC,GAC1B,MAAO,CACLH,KAAMJ,EACNK,QAASE,GAIN,SAASC,EAAYD,EAAIE,GAC9B,MAAO,CACLL,KAAMH,EACNI,QAAS,CACPE,KACAE,S,ICjBAC,E,2MACJC,MAAQ,CAAER,KAAM,I,EAEhBD,QAAU,WAEY,KAApB,EAAKS,MAAMR,MAAe,EAAKS,MAAMV,QAAQ,EAAKS,MAAMR,MACxD,EAAKU,SAAS,CAAEV,KAAM,M,EAGxBW,aAAe,SAAAC,GACb,EAAKF,SAAS,CAAEV,KAAMY,EAAEC,OAAOC,S,EAEjCC,cAAgB,SAAAH,GACJ,UAAVA,EAAEI,KAAmB,EAAKjB,W,EAG5BkB,WAAa,a,wEAKX,OACE,yBAAKC,UAAU,mBACb,2BACEjB,KAAK,OACLkB,YAAY,yBACZL,MAAOM,KAAKZ,MAAMR,KAClBqB,SAAUD,KAAKT,aACfW,UAAWF,KAAKL,gBAClB,yBAAKQ,IAAI,MAAML,UAAU,gBAAgBM,QAASJ,KAAKrB,e,GA7BvC0B,aAmCTC,cAAQ,KAAMC,EAAdD,CAAuBnB,G,OCnChCqB,E,2MACJpB,MAAQ,CAAEqB,QAAS,Q,8EAGjB,OAAQT,KAAKZ,MAAMqB,SACjB,IAAK,OACH,GAA2E,IAAvET,KAAKX,MAAMqB,MAAMC,SAASC,QAAO,SAAAlB,GAAK,OAAKA,EAAMmB,aAAWC,OAC9D,OACE,uEAIJ,MAEF,IAAK,YACH,GAA0E,IAAtEd,KAAKX,MAAMqB,MAAMC,SAASC,QAAO,SAAAlB,GAAK,OAAIA,EAAMmB,aAAWC,OAC7D,OACE,kEAIJ,MAEF,QACE,GAAyC,IAArCd,KAAKX,MAAMqB,MAAMC,SAASG,OAC5B,OACE,0E,wCAOQC,GAChBf,KAAKV,SAAS,CAAEmB,QAASM,M,uCAGT,IAAD,OAKf,OAH2B,QAAvBf,KAAKZ,MAAMqB,QAAX,sBACMT,KAAKX,MAAMqB,MAAMC,SAASC,QAAO,SAAAlB,GAAK,OAAKA,EAAMmB,cADvD,YACsEb,KAAKX,MAAMqB,MAAMC,SAASC,QAAO,SAAAlB,GAAK,OAAIA,EAAMmB,eACpHb,KAAKX,MAAMqB,MAAMC,SAASC,QAAO,SAAAlB,GAAK,MAA2B,SAAvB,EAAKN,MAAMqB,SAAsBf,EAAMmB,UAAYnB,EAAMmB,cACzFG,KAAI,SAACtB,EAAOuB,GAC1B,OACE,yBAAKC,KAAK,OAAOtB,IAAKqB,EAAQ,EAAK7B,MAAMqB,QAASX,UAAWJ,EAAMmB,UAAY,yCAA2C,4CACxH,yBAAKM,MAAOzB,EAAMmB,UAAY,CAAEO,eAAgB,gBAAmB,IAAK1B,EAAM2B,SAC9E,6BACE,yBAAKH,KAAK,UAAUpB,UAAWJ,EAAMmB,UAAY,eAAiB,oBAAqBT,QAAS,kBAAM,EAAKf,MAAMJ,WAAWS,EAAMV,IAAI,IAAQmB,IAAI,YAClJ,yBAAKe,KAAK,QAAQpB,UAAWJ,EAAMmB,UAAY,kBAAoB,aAAcT,QAAS,kBAAM,EAAKf,MAAMJ,WAAWS,EAAMV,IAAI,IAAOmB,IAAI,WAE7I,6BACE,yBAAKe,KAAK,SAASpB,UAAU,cAAcM,QAAS,kBAAM,EAAKf,MAAMN,WAAWW,EAAMV,KAAKmB,IAAI,kB,+BAM/F,IAAD,OACP,OACE,6BACE,yBAAKL,UAAU,oBACb,yBAAKA,UAAkC,SAAvBE,KAAKZ,MAAMqB,QAAqB,qBAAkBa,EAAWlB,QAAS,kBAAM,EAAKmB,kBAAkB,UAAnH,QACA,yBAAKzB,UAAkC,QAAvBE,KAAKZ,MAAMqB,QAAoB,qBAAkBa,EAAWlB,QAAS,kBAAM,EAAKmB,kBAAkB,SAAlH,OACA,yBAAKzB,UAAkC,cAAvBE,KAAKZ,MAAMqB,QAA0B,qBAAkBa,EAAWlB,QAAS,kBAAM,EAAKmB,kBAAkB,eAAxH,gBAECvB,KAAKX,MAAMqB,MAAMC,UAAYX,KAAKwB,iBACrC,yBAAK1B,UAAU,WACZE,KAAKyB,qB,GAnEOpB,aAgFRC,mBANf,SAAyBlB,GACvB,MAAO,CACLsB,MAAOtB,EAAMsB,SAIuBH,EAAzBD,CAAkCE,G,OClF3CkB,EAAY,CAChBC,UAAW,EACXhB,SAAU,IA8BGiB,EA3BK,WAAgC,IAA/BxC,EAA8B,uDAAtBsC,EAAWG,EAAW,uCACjD,OAAQA,EAAOhD,MAEb,KAAKL,EACH,IAAMsD,EAAU,CAAET,QAASQ,EAAO/C,QAASE,GAAII,EAAMuC,UAAWd,WAAW,GAC3E,OAAOkB,OAAOC,OAAO,GAAI5C,EAAO,CAC9BuC,UAAWvC,EAAMuC,UAAY,EAC7BhB,SAAS,GAAD,mBAAMvB,EAAMuB,UAAZ,CAAsBmB,MAGlC,KAAKrD,EACH,OAAOsD,OAAOC,OAAO,GAAI5C,EAAO,CAC9BuB,SAAUvB,EAAMuB,SAASC,QAAO,SAAAlB,GAAK,OAAIA,EAAMV,KAAO6C,EAAO/C,aAGjE,KAAKJ,EACH,OAAOqD,OAAOC,OAAO,GAAI5C,EAAO,CAC9BuB,SAAUvB,EAAMuB,SAASK,KAAI,SAAAtB,GAAK,OAAIA,EAAMV,KAAO6C,EAAO/C,QAAQE,GAC9DU,EACA,CAAE2B,QAAS3B,EAAM2B,QAASrC,GAAI6C,EAAO/C,QAAQE,GAAI6B,UAAWgB,EAAO/C,QAAQI,WAGnF,QACE,OAAOE,IC3BE6C,cAAgB,CAC7BvB,MAAOkB,I,uBCETM,IAASC,OACP,mBCDa,YAAmC,IAAhCC,EAA+B,EAA/BA,SAA+B,IAArBV,iBAAqB,MAAT,GAAS,EACzCW,EAAQC,YAAYC,EAAUb,EAAWc,YAAgBC,MAC/D,OACE,kBAAC,IAAD,CAAUJ,MAAOA,GACdD,KDHL,KACE,mBEDW,WACb,OACE,yBAAKtC,UAAU,OACb,0CACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,QACb,6BACE,uBAAGL,OAAO,SAASiD,IAAI,sBAAsBC,KAAK,uDAChD,+CAGJ,uBAAGlD,OAAO,SAASiD,IAAI,sBAAsBC,KAAK,uDAChD,yBAAK7C,UAAU,cAAcK,IAAI,gBFZvC,OAEAyC,SAASC,cAAc,Y","file":"static/js/main.5b5213aa.chunk.js","sourcesContent":["export const ADD_TODO = 'add_todo'\r\nexport const REMOVE_TODO = 'remove_todo'\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO'","import {ADD_TODO, REMOVE_TODO, TOGGLE_TODO} from './types'\r\n\r\nexport function addTodo (todo) {\r\n  return {\r\n    type: ADD_TODO,\r\n    payload: todo\r\n  }\r\n}\r\n\r\nexport function removeTodo (id) {\r\n  return {\r\n    type: REMOVE_TODO,\r\n    payload: id\r\n  }\r\n}\r\n\r\nexport function toggleTodo (id, bool) {\r\n  return {\r\n    type: TOGGLE_TODO,\r\n    payload: {\r\n      id,\r\n      bool\r\n    }\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\n\r\nclass TodoInput extends Component {\r\n  state = { todo: '' }\r\n\r\n  addTodo = () => {\r\n    //防止空字串\r\n    this.state.todo !== '' && this.props.addTodo(this.state.todo)\r\n    this.setState({ todo: '' })\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({ todo: e.target.value })\r\n  }\r\n  handleKeyDown = e => {\r\n    e.key === 'Enter' && this.addTodo()\r\n  }\r\n\r\n  switchMode = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"add something to do...\"\r\n          value={this.state.todo}\r\n          onChange={this.handleChange}\r\n          onKeyDown={this.handleKeyDown} />\r\n        <img alt=\"add\" className=\"input-add-img\" onClick={this.addTodo}></img>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(TodoInput)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as actions from '../actions/index'\r\n\r\nclass TodoList extends Component {\r\n  state = { display: 'TODO' }\r\n\r\n  renderNoData() {\r\n    switch (this.state.display) {\r\n      case 'TODO':\r\n        if (this.props.todos.todoList.filter(value => !value.completed).length === 0) {\r\n          return (\r\n            <h4>Please enter something to create todos.</h4>\r\n            // <h4>There is nothing to be found here.</h4>\r\n          )\r\n        }\r\n        break;\r\n\r\n      case 'COMPLETED':\r\n        if (this.props.todos.todoList.filter(value => value.completed).length === 0) {\r\n          return (\r\n            <h4>There is nothing to be found here.</h4>\r\n            // <h4>No completed todos found.</h4>\r\n          )\r\n        }\r\n        break;\r\n\r\n      default: // 'ALL'\r\n        if (this.props.todos.todoList.length === 0) {\r\n          return (\r\n            <h4>Please enter something to create todos.</h4>\r\n          )\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  switchDisplayMode(mode) {\r\n    this.setState({ display: mode })\r\n  }\r\n\r\n  renderComments() {\r\n    const todoList\r\n      = this.state.display === 'ALL'\r\n        ? [...this.props.todos.todoList.filter(value => !value.completed), ...this.props.todos.todoList.filter(value => value.completed)]\r\n        : this.props.todos.todoList.filter(value => this.state.display === 'TODO' ? !value.completed : value.completed)\r\n    return todoList.map((value, index) => {\r\n      return (\r\n        <div name=\"todo\" key={index + this.state.display} className={value.completed ? \"todolist-grid-container todo-completed\" : \"todolist-grid-container todo-uncompleted\"}>\r\n          <div style={value.completed ? { textDecoration: \"line-through\" } : {}}>{value.content}</div>\r\n          <div>\r\n            <img name=\"uncheck\" className={value.completed ? \"icon-uncheck\" : \"icon-uncheck hide\"} onClick={() => this.props.toggleTodo(value.id, false)} alt=\"uncheck\" />\r\n            <img name=\"check\" className={value.completed ? \"icon-check hide\" : \"icon-check\"} onClick={() => this.props.toggleTodo(value.id, true)} alt=\"check\" />\r\n          </div>\r\n          <div>\r\n            <img name=\"remove\" className=\"icon-remove\" onClick={() => this.props.removeTodo(value.id)} alt=\"remove\" />\r\n          </div>\r\n        </div>)\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"switch-container\">\r\n          <div className={this.state.display === \"TODO\" ? \"switch-active\" : undefined} onClick={() => this.switchDisplayMode('TODO')}>Todo</div>\r\n          <div className={this.state.display === \"ALL\" ? \"switch-active\" : undefined} onClick={() => this.switchDisplayMode('ALL')}>All</div>\r\n          <div className={this.state.display === \"COMPLETED\" ? \"switch-active\" : undefined} onClick={() => this.switchDisplayMode('COMPLETED')}>Completed</div>\r\n        </div>\r\n        {!!this.props.todos.todoList && this.renderComments()}\r\n        <div className=\"no-data\">\r\n          {this.renderNoData()}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    todos: state.todos\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, actions)(TodoList)","import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from '../actions/types'\r\n\r\nconst initState = {\r\n  currentId: 0,\r\n  todoList: []\r\n}\r\n\r\nconst todoReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n\r\n    case ADD_TODO:\r\n      const newTodo = { content: action.payload, id: state.currentId, completed: false }\r\n      return Object.assign({}, state, {\r\n        currentId: state.currentId + 1,\r\n        todoList: [...state.todoList, newTodo]\r\n      })\r\n\r\n    case REMOVE_TODO:\r\n      return Object.assign({}, state, {\r\n        todoList: state.todoList.filter(value => value.id !== action.payload)\r\n      })\r\n\r\n    case TOGGLE_TODO:\r\n      return Object.assign({}, state, {\r\n        todoList: state.todoList.map(value => value.id !== action.payload.id\r\n          ? value\r\n          : { content: value.content, id: action.payload.id, completed: action.payload.bool })\r\n      })\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default todoReducer","import { combineReducers } from 'redux'\r\nimport todoReducer from './todos'\r\n\r\nexport default combineReducers({\r\n  todos: todoReducer\r\n})","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport Root from './Root'\r\nimport './styles/Index.scss'\r\n\r\nReactDOM.render(\r\n  <Root>\r\n    <App />\r\n  </Root>\r\n  , document.querySelector('#root')\r\n)\r\n","import React from 'react'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport Reducers from './reducers/index'\r\nimport reduxPromise from 'redux-promise'\r\n\r\nexport default ({ children, initState = {} }) => {\r\n  const store = createStore(Reducers, initState, applyMiddleware(reduxPromise))\r\n  return (\r\n    <Provider store={store}>\r\n      {children}\r\n    </Provider>\r\n  )\r\n}","import React from 'react'\r\n\r\nimport TodoInput from './TodoInput'\r\nimport TodoList from './TodoList'\r\n\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"app\">\r\n      <h2>Todo List!</h2>\r\n      <TodoInput />\r\n      <TodoList />\r\n      <div className=\"link\">\r\n        <div>\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/shinenic/strokes-operation-react\">\r\n            <span>source code</span>\r\n          </a>\r\n        </div>\r\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/shinenic/strokes-operation-react\">\r\n          <img className=\"github-icon\" alt=\"github\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"sourceRoot":""}